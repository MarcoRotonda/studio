#
# ANDROID CLANG MAKEFILE FOR WINDOWS
#

# android ndk, toolchain and api version
NDK       = C:/android-ndk-r21
TOOLCHAIN = $(NDK)/toolchains/llvm/prebuilt/windows-x86_64
API       = 21

#########################################################################################
# target platforms

#####
# ARM
#TARGET_X86 = armv7a-linux-androideabi
#TARGET_X64 = aarch64-linux-android

# unfortunately the AR binaries have slightly different naming for armv7a
# compares to the clang target platform and binaries
#TARGET_AR_X86 = arm-linux-androideabi
#TARGET_AR_X64 = aarch64-linux-android

# android sysroot in ndk
#SYSROOT_X86 = $(NDK)/platforms/android-$(API)/arch-arm
#SYSROOT_X64 = $(NDK)/platforms/android-$(API)/arch-arm64

#####
# X86
TARGET_X86 = i686-linux-android
TARGET_X64 = x86_64-linux-android

# unfortunately the AR binaries have slightly different naming for armv7a
# compares to the clang target platform and binaries
TARGET_AR_X86 = i686-linux-android
TARGET_AR_X64 = x86_64-linux-android

# android sysroot in ndk
SYSROOT_X86 = $(NDK)/platforms/android-$(API)/arch-x86
SYSROOT_X64 = $(NDK)/platforms/android-$(API)/arch-x86_64

#########################################################################################

# flags shared between all
FLAGS = -O2 \
        -fpic \
        -DANDROID \
        -D__ANDROID_API__=$(API) \
        -D_SILENCE_CXX17_OLD_ALLOCATOR_MEMBERS_DEPRECATION_WARNING \
        -Wno-deprecated-declarations

# Architecture flags
ARCHFLAGS_X86 =
ARCHFLAGS_X64 =

# C Compiler
CC_X86       = $(TOOLCHAIN)/bin/$(TARGET_X86)$(API)-clang.cmd
CC_X64       = $(TOOLCHAIN)/bin/$(TARGET_X64)$(API)-clang.cmd
CFLAGS_X86   = -static -m32 --target=$(TARGET_X86) -isystem $(NDK)/sysroot/usr/include/$(TARGET_AR_X86) $(ARCHFLAGS_X86) $(FLAGS)
CFLAGS_X64   = -static -m64 --target=$(TARGET_X64) -isystem $(NDK)/sysroot/usr/include/$(TARGET_AR_X64) $(ARCHFLAGS_X64) $(FLAGS)

# C++ Compiler
CXX_X86        = $(TOOLCHAIN)/bin/$(TARGET_X86)$(API)-clang++.cmd
CXX_X64        = $(TOOLCHAIN)/bin/$(TARGET_X64)$(API)-clang++.cmd
CXXFLAGS_X86 = -static -m32 -target $(TARGET_X86) -isystem $(NDK)/sysroot/usr/include/$(TARGET_AR_X86) $(ARCHFLAGS_X86) $(FLAGS)
CXXFLAGS_X64 = -static -m64 -target $(TARGET_X64) -isystem $(NDK)/sysroot/usr/include/$(TARGET_AR_X64) $(ARCHFLAGS_X64) $(FLAGS)

# File Operations
define deletefilepattern
	del /s /q $(subst /,\,$(1))\$(2)
endef

# Platform Specific additional defines
ENGINE_DEFINES_X86_PLAT       = -DNEUROMORE_PLATFORM_ANDROID
ENGINE_DEFINES_X64_PLAT       = -DNEUROMORE_PLATFORM_ANDROID
ENGINESHARED_DEFINES_X86_PLAT = -DNEUROMORE_PLATFORM_ANDROID
ENGINESHARED_DEFINES_X64_PLAT = -DNEUROMORE_PLATFORM_ANDROID
QTBASE_DEFINES_X86_PLAT       = -DNEUROMORE_PLATFORM_ANDROID -DQT_QPA_DEFAULT_PLATFORM_NAME=\"android\" -DQT_FEATURE_fontconfig=-1
QTBASE_DEFINES_X64_PLAT       = -DNEUROMORE_PLATFORM_ANDROID -DQT_QPA_DEFAULT_PLATFORM_NAME=\"android\" -DQT_FEATURE_fontconfig=-1
STUDIO_DEFINES_X86_PLAT       = -DNEUROMORE_PLATFORM_ANDROID -DQT_QPA_DEFAULT_PLATFORM_NAME=\"android\" -DQT_FEATURE_fontconfig=-1
STUDIO_DEFINES_X64_PLAT       = -DNEUROMORE_PLATFORM_ANDROID -DQT_QPA_DEFAULT_PLATFORM_NAME=\"android\" -DQT_FEATURE_fontconfig=-1

# Platform Specific additional includes
ENGINE_INCLUDES_X86_PLAT =
ENGINE_INCLUDES_X64_PLAT =
QTBASE_INCLUDES_X86_PLAT =
QTBASE_INCLUDES_X64_PLAT =
STUDIO_INCLUDES_X86_PLAT =
STUDIO_INCLUDES_X64_PLAT =

#####################################################################################
# Qt MOC+RCC+UIC

MOC_X86 = ../../deps/prebuilt/win/x86/qt-moc.exe
MOC_X64 = ../../deps/prebuilt/win/x64/qt-moc.exe
ifneq (,$(findstring x86,$(MAKECMDGOALS)))
    MOC = $(MOC_X86)
endif
ifneq (,$(findstring x64,$(MAKECMDGOALS)))
    MOC = $(MOC_X64)
endif

RCC_X86 = ../../deps/prebuilt/win/x86/qt-rcc.exe
RCC_X64 = ../../deps/prebuilt/win/x64/qt-rcc.exe
ifneq (,$(findstring x86,$(MAKECMDGOALS)))
    RCC = $(RCC_X86)
endif
ifneq (,$(findstring x64,$(MAKECMDGOALS)))
    RCC = $(RCC_X64)
endif

UIC_X86 = ../../deps/prebuilt/win/x86/qt-rcc.exe
UIC_X64 = ../../deps/prebuilt/win/x64/qt-rcc.exe
ifneq (,$(findstring x86,$(MAKECMDGOALS)))
    UIC = $(UIC_X86)
endif
ifneq (,$(findstring x64,$(MAKECMDGOALS)))
    UIC = $(UIC_X64)
endif

#####################################################################################
# Include Common Makefile
include Makefile.common

# LIB Tool
LIB_X86      = $(TOOLCHAIN)/bin/$(TARGET_AR_X86)-ar.exe
LIB_X64      = $(TOOLCHAIN)/bin/$(TARGET_AR_X64)-ar.exe
LIBFLAGS_X86 = rcs
LIBFLAGS_X64 = rcs

# LIB Functions
define createlib32
	$(LIB_X86) $(LIBFLAGS_X86) $(LIBDIR_X86)/$(1).a $(2)
endef
define createlib64
	$(LIB_X64) $(LIBFLAGS_X64) $(LIBDIR_X64)/$(1).a $(2)
endef

#####################################################################################
# Linker
LINK_X86         = $(CXX_X86)
LINK_X64         = $(CXX_X64)
LINKFLAGS_X86    = --sysroot=$(SYSROOT_X86) -target $(TARGET_X86) -isystem $(NDK)/sysroot/usr/include/$(TARGET_AR_X86) $(FLAGS)
LINKFLAGS_X64    = --sysroot=$(SYSROOT_X64) -target $(TARGET_X64) -isystem $(NDK)/sysroot/usr/include/$(TARGET_AR_X64) $(FLAGS)
LINKFLAGSDYN_X86 = -shared -static-libstdc++
LINKFLAGSDYN_X64 = -shared -static-libstdc++

# Additional Linker Library Path for shared libraries
LINKPATH_X86 = \
	-L./lib/x86 \
	-L$(SYSROOT_X86)/usr/lib/ \
	-L$(TOOLCHAIN)/sysroot/usr/lib/$(TARGET_AR_X86)/$(API) \
	-L$(TOOLCHAIN)/sysroot/usr/lib/$(TARGET_AR_X86)
	
LINKPATH_X64 = \
	-L./lib/x64 \
	-L$(SYSROOT_X64)/usr/lib/ \
	-L$(TOOLCHAIN)/sysroot/usr/lib/$(TARGET_AR_X64)/$(API) \
	-L$(TOOLCHAIN)/sysroot/usr/lib/$(TARGET_AR_X64)

# Shared Libraries for X86 and X64
LINKLIBS_ALL = -llog

# Libraries for X86 or X64
LINKLIBS_X86 = $(LINKLIBS_ALL)
LINKLIBS_X64 = $(LINKLIBS_ALL)

# Linker Functions for Executable
define createbin32
	$(LINK_X86) $(LINKFLAGS_X86) $(LINKPATH_X86) $(2) $(3) $(LINKLIBS_X86) -o $(BINDIR_X86)/$(1) 
endef
define createbin64
	$(LINK_X64) $(LINKFLAGS_X64) $(LINKPATH_X64) $(2) $(3) $(LINKLIBS_X64) -o $(BINDIR_X64)/$(1)  
endef

# Linker Functions for Shared Library
define createshared32
	$(LINK_X86) $(LINKFLAGS_X86) $(LINKFLAGSDYN_X86) $(LINKPATH_X86) $(2) $(3) $(LINKLIBS_X86) -o $(LIBDIR_X86)/$(1).so
endef
define createshared64
	$(LINK_X64) $(LINKFLAGS_X64) $(LINKFLAGSDYN_X64) $(LINKPATH_X64) $(2) $(3) $(LINKLIBS_X64) -o $(LIBDIR_X64)/$(1).so
endef

#####################################################################################
# Platform Specific additional objects to build
#####################################################################################

ENGINE_OBJS     = $(ENGINE_OBJS_ALL)

ENGINESHARED_OBJS     = $(ENGINESHARED_OBJS_ALL) \
                        neuromoreEngineJni.o
ENGINESHARED_LIBS_X86 = $(LIBDIR_X86)/Engine.a \
                        $(DEPSLIBDIR_X86)/oscpack.a \
                        $(DEPSLIBDIR_X86)/kissfft.a \
                        $(DEPSLIBDIR_X86)/zlib.a
ENGINESHARED_LIBS_X64 = $(LIBDIR_X64)/Engine.a \
                        $(DEPSLIBDIR_X64)/oscpack.a \
                        $(DEPSLIBDIR_X64)/kissfft.a \
                        $(DEPSLIBDIR_X64)/zlib.a

QTBASE_MOCH     = $(QTBASE_MOCH_ALL)
QTBASE_MOCC     = $(QTBASE_MOCC_ALL)
QTBASE_UICH     = $(QTBASE_UICH_ALL)
QTBASE_RCCH     = $(QTBASE_RCCH_ALL)
QTBASE_OBJS     = $(QTBASE_OBJS_ALL)
QTBASE_OBJS_MOC = $(QTBASE_OBJS_MOC_ALL)
QTBASE_OBJS_RCC = $(QTBASE_OBJS_RCC_ALL)

STUDIO_MOCH     = $(STUDIO_MOCH_ALL)
STUDIO_MOCC     = $(STUDIO_MOCC_ALL)
STUDIO_UICH     = $(STUDIO_UICH_ALL)
STUDIO_RCCH     = $(STUDIO_RCCH_ALL)
STUDIO_OBJS     = $(STUDIO_OBJS_ALL)
STUDIO_OBJS_MOC = $(STUDIO_OBJS_MOC_ALL)
STUDIO_OBJS_RCC = $(STUDIO_OBJS_RCC_ALL)
STUDIO_RES      = $(STUDIO_RES_ALL)

STUDIO_LIBS_X86 = $(LIBDIR_X86)/QtBase.a \
                  $(LIBDIR_X86)/Engine.a \
                  $(DEPSLIBDIR_X86)/singleapplication.a \
                  $(DEPSLIBDIR_X86)/qt-bluetooth.a \
                  $(DEPSLIBDIR_X86)/qt-concurrent.a \
                  $(DEPSLIBDIR_X86)/qt-eventdispatchers.a \
                  $(DEPSLIBDIR_X86)/qt-gamepad.a \
                  $(DEPSLIBDIR_X86)/qt-multimedia.a \
                  $(DEPSLIBDIR_X86)/qt-multimediawidgets.a \
                  $(DEPSLIBDIR_X86)/qt-network.a \
                  $(DEPSLIBDIR_X86)/qt-opengl.a \
                  $(DEPSLIBDIR_X86)/qt-platform-android.a \
                  $(DEPSLIBDIR_X86)/qt-fontdatabases.a \
                  $(DEPSLIBDIR_X86)/qt-printsupport.a \
                  $(DEPSLIBDIR_X86)/qt-serialport.a \
                  $(DEPSLIBDIR_X86)/qt-widgets.a \
                  $(DEPSLIBDIR_X86)/qt-gui.a \
                  $(DEPSLIBDIR_X86)/qt-xml.a \
                  $(DEPSLIBDIR_X86)/qt-dbus.a \
                  $(DEPSLIBDIR_X86)/qt-core.a \
                  $(DEPSLIBDIR_X86)/double-conversion.a \
                  $(DEPSLIBDIR_X86)/edflib.a \
                  $(DEPSLIBDIR_X86)/fontconfig.a \
                  $(DEPSLIBDIR_X86)/freetype.a \
                  $(DEPSLIBDIR_X86)/harfbuzz.a \
                  $(DEPSLIBDIR_X86)/harfbuzz-ng.a \
                  $(DEPSLIBDIR_X86)/kissfft.a \
                  $(DEPSLIBDIR_X86)/libssl.a \
                  $(DEPSLIBDIR_X86)/libcrypto.a \
                  $(DEPSLIBDIR_X86)/opencv-core.a \
                  $(DEPSLIBDIR_X86)/opencv-imgcodecs.a \
                  $(DEPSLIBDIR_X86)/opencv-imgproc.a \
                  $(DEPSLIBDIR_X86)/opencv-videoio.a \
                  $(DEPSLIBDIR_X86)/minizip.a \
                  $(DEPSLIBDIR_X86)/oscpack.a \
                  $(DEPSLIBDIR_X86)/pcre2.a \
                  $(DEPSLIBDIR_X86)/tinyaes.a \
                  $(DEPSLIBDIR_X86)/tinyobjloader.a \
                  $(DEPSLIBDIR_X86)/tinyxml.a \
                  $(DEPSLIBDIR_X86)/libjpeg.a \
                  $(DEPSLIBDIR_X86)/libpng.a \
                  $(DEPSLIBDIR_X86)/zlib.a
STUDIO_LIBS_X64 = $(LIBDIR_X64)/QtBase.a \
                  $(LIBDIR_X64)/Engine.a \
                  $(DEPSLIBDIR_X64)/singleapplication.a \
                  $(DEPSLIBDIR_X64)/qt-bluetooth.a \
                  $(DEPSLIBDIR_X64)/qt-concurrent.a \
                  $(DEPSLIBDIR_X64)/qt-eventdispatchers.a \
                  $(DEPSLIBDIR_X64)/qt-gamepad.a \
                  $(DEPSLIBDIR_X64)/qt-multimedia.a \
                  $(DEPSLIBDIR_X64)/qt-multimediawidgets.a \
                  $(DEPSLIBDIR_X64)/qt-network.a \
                  $(DEPSLIBDIR_X64)/qt-opengl.a \
                  $(DEPSLIBDIR_X64)/qt-platform-android.a \
                  $(DEPSLIBDIR_X64)/qt-fontdatabases.a \
                  $(DEPSLIBDIR_X64)/qt-printsupport.a \
                  $(DEPSLIBDIR_X64)/qt-serialport.a \
                  $(DEPSLIBDIR_X64)/qt-widgets.a \
                  $(DEPSLIBDIR_X64)/qt-gui.a \
                  $(DEPSLIBDIR_X64)/qt-xml.a \
                  $(DEPSLIBDIR_X64)/qt-dbus.a \
                  $(DEPSLIBDIR_X64)/qt-core.a \
                  $(DEPSLIBDIR_X64)/double-conversion.a \
                  $(DEPSLIBDIR_X64)/edflib.a \
                  $(DEPSLIBDIR_X64)/fontconfig.a \
                  $(DEPSLIBDIR_X64)/freetype.a \
                  $(DEPSLIBDIR_X64)/harfbuzz.a \
                  $(DEPSLIBDIR_X64)/harfbuzz-ng.a \
                  $(DEPSLIBDIR_X64)/kissfft.a \
                  $(DEPSLIBDIR_X64)/libssl.a \
                  $(DEPSLIBDIR_X64)/libcrypto.a \
                  $(DEPSLIBDIR_X64)/opencv-core.a \
                  $(DEPSLIBDIR_X64)/opencv-imgcodecs.a \
                  $(DEPSLIBDIR_X64)/opencv-imgproc.a \
                  $(DEPSLIBDIR_X64)/opencv-videoio.a \
                  $(DEPSLIBDIR_X64)/minizip.a \
                  $(DEPSLIBDIR_X64)/oscpack.a \
                  $(DEPSLIBDIR_X64)/pcre2.a \
                  $(DEPSLIBDIR_X64)/tinyaes.a \
                  $(DEPSLIBDIR_X64)/tinyobjloader.a \
                  $(DEPSLIBDIR_X64)/tinyxml.a \
                  $(DEPSLIBDIR_X64)/libjpeg.a \
                  $(DEPSLIBDIR_X64)/libpng.a \
                  $(DEPSLIBDIR_X64)/zlib.a

#####################################################################################
# Include Targets

include Makefile.targets

all-x86: all-common-x86 \
         Engine-shared-x86

all-x64: all-common-x64 \
         Engine-Shared-x64

all: all-x86 all-x64
